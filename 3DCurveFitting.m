function [fitresult, gof] = createFits(PackAh, MaxPackPower, PackMass, AttainablePackAh, AttainableMaxPackPower, AttainablePackMass, AttainableRunTime250W)
%CREATEFITS(PACKAH,MAXPACKPOWER,PACKMASS,ATTAINABLEPACKAH,ATTAINABLEMAXPACKPOWER,ATTAINABLEPACKMASS,ATTAINABLERUNTIME250W)
%  Create fits.
%
%  Data for 'PackMassVsAhVsMaxW' fit:
%      X Input : PackAh
%      Y Input : MaxPackPower
%      Z Output: PackMass
%  Data for 'AttainableMassVsAhVsMaxW' fit:
%      X Input : AttainablePackAh
%      Y Input : AttainableMaxPackPower
%      Z Output: AttainablePackMass
%  Data for 'AttainableMassVsRunTimeVsMaxW' fit:
%      X Input : AttainableRunTime250W
%      Y Input : AttainableMaxPackPower
%      Z Output: AttainablePackMass
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 12-Dec-2019 00:10:59

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 3, 1 );
gof = struct( 'sse', cell( 3, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'PackMassVsAhVsMaxW'.
[xData, yData, zData] = prepareSurfaceData( PackAh, MaxPackPower, PackMass );

% Set up fittype and options.
ft = fittype( 'poly11' );

% Fit model to data.
[fitresult{1}, gof(1)] = fit( [xData, yData], zData, ft, 'Normalize', 'on' );

% Plot fit with data.
figure( 'Name', 'PackMassVsAhVsMaxW' );
h = plot( fitresult{1}, [xData, yData], zData );
legend( h, 'PackMassVsAhVsMaxW', 'PackMass vs. PackAh, MaxPackPower', 'Location', 'NorthEast' );
% Label axes
xlabel PackAh
ylabel MaxPackPower
zlabel PackMass
grid on
view( -9.2, 23.2 );

%% Fit: 'AttainableMassVsAhVsMaxW'.
[xData, yData, zData] = prepareSurfaceData( AttainablePackAh, AttainableMaxPackPower, AttainablePackMass );

% Set up fittype and options.
ft = fittype( 'poly11' );

% Fit model to data.
[fitresult{2}, gof(2)] = fit( [xData, yData], zData, ft );

% Create a figure for the plots.
figure( 'Name', 'AttainableMassVsAhVsMaxW' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{2}, [xData, yData], zData );
legend( h, 'AttainableMassVsAhVsMaxW', 'AttainablePackMass vs. AttainablePackAh, AttainableMaxPackPower', 'Location', 'NorthEast' );
% Label axes
xlabel AttainablePackAh
ylabel AttainableMaxPackPower
zlabel AttainablePackMass
grid on
view( -27.0, 20.4 );

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{2}, [xData, yData], zData, 'Style', 'Residual' );
legend( h, 'AttainableMassVsAhVsMaxW - residuals', 'Location', 'NorthEast' );
% Label axes
xlabel AttainablePackAh
ylabel AttainableMaxPackPower
zlabel AttainablePackMass
grid on
view( -27.0, 20.4 );

%% Fit: 'AttainableMassVsRunTimeVsMaxW'.
[xData, yData, zData] = prepareSurfaceData( AttainableRunTime250W, AttainableMaxPackPower, AttainablePackMass );

% Set up fittype and options.
ft = fittype( 'poly11' );

% Fit model to data.
[fitresult{3}, gof(3)] = fit( [xData, yData], zData, ft );

% Create a figure for the plots.
figure( 'Name', 'AttainableMassVsRunTimeVsMaxW' );

% Plot fit with data.
subplot( 2, 2, 2 );
plot( fitresult{3}, [xData, yData], zData );
% Label axes
xlabel AttainableRunTime250W
ylabel AttainableMaxPackPower
zlabel AttainablePackMass
grid on

% Plot residuals.
subplot( 2, 2, 4 );
plot( fitresult{3}, [xData, yData], zData, 'Style', 'Residual' );
% Label axes
xlabel AttainableRunTime250W
ylabel AttainableMaxPackPower
zlabel AttainablePackMass
grid on

% Make contour plot.
subplot( 1, 2, 1 );
plot( fitresult{3}, [xData, yData], zData, 'Style', 'Contour' );
% Label axes
xlabel AttainableRunTime250W
ylabel AttainableMaxPackPower
grid on


